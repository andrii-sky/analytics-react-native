{"version":3,"sources":["context.ts"],"names":["getContext","userTraits","config","AnalyticsReactNative","NativeModules","appName","appVersion","buildNumber","bundleId","locale","networkType","osName","osVersion","screenHeight","screenWidth","timezone","manufacturer","model","deviceName","deviceId","deviceType","screenDensity","getContextInfo","device","id","name","type","app","build","namespace","version","library","packageJson","network","cellular","wifi","os","screen","width","height","density","traits"],"mappings":";;;;;;;AAAA;;AACA;;;;AAYO,MAAMA,UAAU,GAAG,kBAGH;AAAA,MAFrBC,UAEqB,uEAFI,EAEJ;AAAA,MADrBC,MACqB,uEADM,EACN;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAA2BC,0BAAjC;AAEA,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,MALI;AAMJC,IAAAA,WANI;AAOJC,IAAAA,MAPI;AAQJC,IAAAA,SARI;AASJC,IAAAA,YATI;AAUJC,IAAAA,WAVI;AAWJC,IAAAA,QAXI;AAYJC,IAAAA,YAZI;AAaJC,IAAAA,KAbI;AAcJC,IAAAA,UAdI;AAeJC,IAAAA,QAfI;AAgBJC,IAAAA,UAhBI;AAiBJC,IAAAA;AAjBI,MAkBiB,MAAMlB,oBAAoB,CAACmB,cAArB,CAAoCpB,MAApC,CAlB7B;AAoBA,QAAMqB,MAAqB,GAAG;AAC5BC,IAAAA,EAAE,EAAEL,QADwB;AAE5BH,IAAAA,YAAY,EAAEA,YAFc;AAG5BC,IAAAA,KAAK,EAAEA,KAHqB;AAI5BQ,IAAAA,IAAI,EAAEP,UAJsB;AAK5BQ,IAAAA,IAAI,EAAEN;AALsB,GAA9B;AAQA,SAAO;AACLO,IAAAA,GAAG,EAAE;AACHC,MAAAA,KAAK,EAAErB,WADJ;AAEHkB,MAAAA,IAAI,EAAEpB,OAFH;AAGHwB,MAAAA,SAAS,EAAErB,QAHR;AAIHsB,MAAAA,OAAO,EAAExB;AAJN,KADA;AAOLiB,IAAAA,MAPK;AAQLQ,IAAAA,OAAO,EAAE;AACPN,MAAAA,IAAI,EAAEO,iBAAYP,IADX;AAEPK,MAAAA,OAAO,EAAEE,iBAAYF;AAFd,KARJ;AAYLrB,IAAAA,MAZK;AAaLwB,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAExB,WAAW,KAAK,UADnB;AAEPyB,MAAAA,IAAI,EAAEzB,WAAW,KAAK;AAFf,KAbJ;AAiBL0B,IAAAA,EAAE,EAAE;AACFX,MAAAA,IAAI,EAAEd,MADJ;AAEFmB,MAAAA,OAAO,EAAElB;AAFP,KAjBC;AAqBLyB,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAExB,WADD;AAENyB,MAAAA,MAAM,EAAE1B,YAFF;AAGN2B,MAAAA,OAAO,EAAEnB;AAHH,KArBH;AA0BLN,IAAAA,QA1BK;AA2BL0B,IAAAA,MAAM,EAAExC;AA3BH,GAAP;AA6BD,CA/DM","sourcesContent":["import { NativeModules } from 'react-native';\nimport packageJson from '../package.json';\n\nimport type {\n  Context,\n  ContextDevice,\n  NativeContextInfo,\n  UserTraits,\n} from './types';\n\ninterface GetContextConfig {\n  collectDeviceId?: boolean;\n}\nexport const getContext = async (\n  userTraits: UserTraits = {},\n  config: GetContextConfig = {}\n): Promise<Context> => {\n  const { AnalyticsReactNative } = NativeModules;\n\n  const {\n    appName,\n    appVersion,\n    buildNumber,\n    bundleId,\n    locale,\n    networkType,\n    osName,\n    osVersion,\n    screenHeight,\n    screenWidth,\n    timezone,\n    manufacturer,\n    model,\n    deviceName,\n    deviceId,\n    deviceType,\n    screenDensity,\n  }: NativeContextInfo = await AnalyticsReactNative.getContextInfo(config);\n\n  const device: ContextDevice = {\n    id: deviceId,\n    manufacturer: manufacturer,\n    model: model,\n    name: deviceName,\n    type: deviceType,\n  };\n\n  return {\n    app: {\n      build: buildNumber,\n      name: appName,\n      namespace: bundleId,\n      version: appVersion,\n    },\n    device,\n    library: {\n      name: packageJson.name,\n      version: packageJson.version,\n    },\n    locale,\n    network: {\n      cellular: networkType === 'cellular',\n      wifi: networkType === 'wifi',\n    },\n    os: {\n      name: osName,\n      version: osVersion,\n    },\n    screen: {\n      width: screenWidth,\n      height: screenHeight,\n      density: screenDensity,\n    },\n    timezone,\n    traits: userTraits,\n  };\n};\n"]}